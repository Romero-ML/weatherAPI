{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "from pprint import pprint\n",
    "import time\n",
    "\n",
    "# Import API key\n",
    "from config import api_keys\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"output_data/cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['constitucion',\n",
       " 'butaritari',\n",
       " 'mataura',\n",
       " 'vila velha',\n",
       " 'riyadh',\n",
       " 'east london',\n",
       " 'seoul',\n",
       " 'ribeira grande',\n",
       " 'tsihombe',\n",
       " 'cape town',\n",
       " 'sheridan',\n",
       " 'new iberia',\n",
       " 'moorhead',\n",
       " 'avarua',\n",
       " 'paka',\n",
       " 'talaya',\n",
       " 'vaini',\n",
       " 'punta arenas',\n",
       " 'bluff',\n",
       " 'milkovo',\n",
       " 'olenino',\n",
       " 'puerto ayora',\n",
       " 'nabire',\n",
       " 'rikitea',\n",
       " 'saint-philippe',\n",
       " 'hermanus',\n",
       " 'illoqqortoormiut',\n",
       " 'srednekolymsk',\n",
       " 'coruripe',\n",
       " 'sakakah',\n",
       " 'port alfred',\n",
       " 'khonsa',\n",
       " 'shitanjing',\n",
       " 'marsa matruh',\n",
       " 'khatanga',\n",
       " 'palmer',\n",
       " 'margate',\n",
       " 'marzuq',\n",
       " 'omboue',\n",
       " 'jiuquan',\n",
       " 'rio gallegos',\n",
       " 'cidreira',\n",
       " 'albany',\n",
       " 'busselton',\n",
       " 'vaitupu',\n",
       " 'port hedland',\n",
       " 'faya',\n",
       " 'hithadhoo',\n",
       " 'anadyr',\n",
       " 'kavieng',\n",
       " 'barentsburg',\n",
       " 'yellowknife',\n",
       " 'nkhotakota',\n",
       " 'owando',\n",
       " 'labuhan',\n",
       " 'banmo',\n",
       " 'bethel',\n",
       " 'oranjemund',\n",
       " 'dolores',\n",
       " 'roald',\n",
       " 'qaanaaq',\n",
       " 'neryungri',\n",
       " 'namibe',\n",
       " 'naivasha',\n",
       " 'norman wells',\n",
       " 'lorengau',\n",
       " 'saskylakh',\n",
       " 'new norfolk',\n",
       " 'ushuaia',\n",
       " 'esperance',\n",
       " 'pampierstad',\n",
       " 'masjed-e soleyman',\n",
       " 'kapaa',\n",
       " 'umzimvubu',\n",
       " 'valdemarpils',\n",
       " 'buta',\n",
       " 'lima',\n",
       " 'teknaf',\n",
       " 'dekoa',\n",
       " 'huilong',\n",
       " 'chokurdakh',\n",
       " 'asau',\n",
       " 'arraial do cabo',\n",
       " 'cotonou',\n",
       " 'general salgado',\n",
       " 'broken hill',\n",
       " 'nome',\n",
       " 'cuamba',\n",
       " 'iqaluit',\n",
       " 'coquimbo',\n",
       " 'ayan',\n",
       " 'nanortalik',\n",
       " 'barrow',\n",
       " 'severo-kurilsk',\n",
       " 'ahipara',\n",
       " 'pisco',\n",
       " 'zharkent',\n",
       " 'sistranda',\n",
       " 'yei',\n",
       " 'tiksi',\n",
       " 'mala',\n",
       " 'kudahuvadhoo',\n",
       " 'husavik',\n",
       " 'amderma',\n",
       " 'vereeniging',\n",
       " 'rio grande',\n",
       " 'grand river south east',\n",
       " 'wanning',\n",
       " 'castro',\n",
       " 'bredasdorp',\n",
       " 'thompson',\n",
       " 'port elizabeth',\n",
       " 'puerto escondido',\n",
       " 'vardo',\n",
       " 'nadym',\n",
       " 'harper',\n",
       " 'la ronge',\n",
       " 'ouallam',\n",
       " 'prince rupert',\n",
       " 'carnarvon',\n",
       " 'tiruttani',\n",
       " 'baykalsk',\n",
       " 'moba',\n",
       " 'maungatapere',\n",
       " 'tuktoyaktuk',\n",
       " 'pathein',\n",
       " 'cayenne',\n",
       " 'kasongo-lunda',\n",
       " 'camopi',\n",
       " 'garden city',\n",
       " 'hanna',\n",
       " 'sao joao da barra',\n",
       " 'marawi',\n",
       " 'itoman',\n",
       " 'hammerfest',\n",
       " 'kolda',\n",
       " 'upernavik',\n",
       " 'alofi',\n",
       " 'yangjiang',\n",
       " 'elliot lake',\n",
       " 'biak',\n",
       " 'geraldton',\n",
       " 'todos santos',\n",
       " 'lompoc',\n",
       " 'hilo',\n",
       " 'mys shmidta',\n",
       " 'sitka',\n",
       " 'zafra',\n",
       " 'kaitangata',\n",
       " 'tazovskiy',\n",
       " 'port blair',\n",
       " 'san patricio',\n",
       " 'karratha',\n",
       " 'lebu',\n",
       " 'imbituba',\n",
       " 'valparaiso',\n",
       " 'smolenka',\n",
       " 'sayyan',\n",
       " 'dashitou',\n",
       " 'port-gentil',\n",
       " 'bambous virieux',\n",
       " 'conde',\n",
       " 'georgetown',\n",
       " 'dingle',\n",
       " 'elat',\n",
       " 'kondagaon',\n",
       " 'taoudenni',\n",
       " 'dawlatabad',\n",
       " 'hambantota',\n",
       " 'makakilo city',\n",
       " 'leningradskiy',\n",
       " 'vostok',\n",
       " 'tabiauea',\n",
       " 'muroto',\n",
       " 'rutul',\n",
       " 'ponta do sol',\n",
       " 'henties bay',\n",
       " 'kismayo',\n",
       " 'tumut',\n",
       " 'cherdyn',\n",
       " 'klaksvik',\n",
       " 'hay river',\n",
       " 'cabo san lucas',\n",
       " 'slyudyanka',\n",
       " 'leh',\n",
       " 'tiznit',\n",
       " 'fortuna',\n",
       " 'ventspils',\n",
       " 'novoagansk',\n",
       " 'jamestown',\n",
       " 'kodiak',\n",
       " 'coatesville',\n",
       " 'leshukonskoye',\n",
       " 'kangaatsiaq',\n",
       " 'euclides da cunha',\n",
       " 'victoria',\n",
       " 'pattaya',\n",
       " 'taolanaro',\n",
       " 'bereda',\n",
       " 'kaeo',\n",
       " 'nikolskoye',\n",
       " 'pudozh',\n",
       " 'cartagena del chaira',\n",
       " 'matagami',\n",
       " 'isangel',\n",
       " 'tasiilaq',\n",
       " 'sentyabrskiy',\n",
       " 'kropotkin',\n",
       " 'killybegs',\n",
       " 'ahuimanu',\n",
       " 'mizan teferi',\n",
       " 'sechura',\n",
       " 'manokwari',\n",
       " 'karaton',\n",
       " 'kuopio',\n",
       " 'gisors',\n",
       " 'mar del plata',\n",
       " 'kamenka',\n",
       " 'axim',\n",
       " 'kamaishi',\n",
       " 'juifang',\n",
       " 'okato',\n",
       " 'boundiali',\n",
       " 'colac',\n",
       " 'chuy',\n",
       " 'codrington',\n",
       " 'obihiro',\n",
       " 'hobart',\n",
       " 'opuwo',\n",
       " 'artyk',\n",
       " 'narsaq',\n",
       " 'les cayes',\n",
       " 'saint-pierre',\n",
       " 'amazar',\n",
       " 'hofn',\n",
       " 'barentu',\n",
       " 'raudeberg',\n",
       " 'alihe',\n",
       " 'yulara',\n",
       " 'coihaique',\n",
       " 'tuxpan',\n",
       " 'cockburn town',\n",
       " 'nantucket',\n",
       " 'luwuk',\n",
       " 'mananjary',\n",
       " 'dubti',\n",
       " 'saldanha',\n",
       " 'poum',\n",
       " 'bad aussee',\n",
       " 'lao cai',\n",
       " 'dourbali',\n",
       " 'faanui',\n",
       " 'north bend',\n",
       " 'inhambane',\n",
       " 'havelock',\n",
       " 'macaboboni',\n",
       " 'lagoa',\n",
       " 'longyearbyen',\n",
       " 'atuona',\n",
       " 'tralee',\n",
       " 'waw',\n",
       " 'los llanos de aridane',\n",
       " 'pevek',\n",
       " 'lar',\n",
       " 'turukhansk',\n",
       " 'ilulissat',\n",
       " 'mahibadhoo',\n",
       " 'belushya guba',\n",
       " 'saint-georges',\n",
       " 'sobolevo',\n",
       " 'sembakung',\n",
       " 'shellbrook',\n",
       " 'kruisfontein',\n",
       " 'temanggung',\n",
       " 'dedougou',\n",
       " 'lavrentiya',\n",
       " 'lolua',\n",
       " 'berdigestyakh',\n",
       " 'elliot',\n",
       " 'sindand',\n",
       " 'banda aceh',\n",
       " 'neuquen',\n",
       " 'nemuro',\n",
       " 'moissala',\n",
       " 'kousseri',\n",
       " 'bandarbeyla',\n",
       " 'tir pol',\n",
       " 'mehamn',\n",
       " 'nuuk',\n",
       " 'airai',\n",
       " 'sisimiut',\n",
       " 'greifswald',\n",
       " 'praia da vitoria',\n",
       " 'mustafakemalpasa',\n",
       " 'lovozero',\n",
       " 'acapulco',\n",
       " 'togul',\n",
       " 'cadillac',\n",
       " 'yeppoon',\n",
       " 'aykhal',\n",
       " 'wonthaggi',\n",
       " 'launceston',\n",
       " 'nizhneyansk',\n",
       " 'tevaitoa',\n",
       " 'hualmay',\n",
       " 'chilca',\n",
       " 'mahebourg',\n",
       " 'dustlik',\n",
       " 'havoysund',\n",
       " 'wau',\n",
       " 'moyale',\n",
       " 'chokwe',\n",
       " 'xuddur',\n",
       " 'pacific grove',\n",
       " 'buraydah',\n",
       " 'tidore',\n",
       " 'amapa',\n",
       " 'puente nacional',\n",
       " 'ust-tsilma',\n",
       " 'portland',\n",
       " 'ilhabela',\n",
       " 'mossendjo',\n",
       " 'kholmogory',\n",
       " 'tumannyy',\n",
       " 'katsuura',\n",
       " 'port lincoln',\n",
       " 'bathsheba',\n",
       " 'eureka',\n",
       " 'la peca',\n",
       " 'samarai',\n",
       " 'new castle',\n",
       " 'xiaoweizhai',\n",
       " 'belmonte',\n",
       " 'araouane',\n",
       " 'pacasmayo',\n",
       " 'sao filipe',\n",
       " 'alice springs',\n",
       " 'waingapu',\n",
       " 'muros',\n",
       " 'kavaratti',\n",
       " 'thai nguyen',\n",
       " 'san jeronimo',\n",
       " 'caucaia',\n",
       " 'douentza',\n",
       " 'matay',\n",
       " 'half moon bay',\n",
       " 'rock sound',\n",
       " 'barbar',\n",
       " 'port hardy',\n",
       " 'ponta delgada',\n",
       " 'yomitan',\n",
       " 'esmeraldas',\n",
       " 'olafsvik',\n",
       " 'saint-joseph',\n",
       " 'adrar',\n",
       " 'souillac',\n",
       " 'baru',\n",
       " 'nouadhibou',\n",
       " 'wad rawah',\n",
       " 'khandagayty',\n",
       " 'qandala',\n",
       " 'chagda',\n",
       " 'ust-kamchatsk',\n",
       " 'guerrero negro',\n",
       " 'cherskiy',\n",
       " 'malwan',\n",
       " 'redding',\n",
       " 'shimoda',\n",
       " 'pangody',\n",
       " 'saint-francois',\n",
       " 'kadykchan',\n",
       " 'itarema',\n",
       " 'awbari',\n",
       " 'zhigansk',\n",
       " 'methoni',\n",
       " 'urdzhar',\n",
       " 'miramar',\n",
       " 'anchorage',\n",
       " 'lasa',\n",
       " 'deputatskiy',\n",
       " 'vygonichi',\n",
       " 'mae sot',\n",
       " 'zyryanka',\n",
       " 'emerald',\n",
       " 'patnos',\n",
       " 'quatre cocos',\n",
       " 'bundaberg',\n",
       " 'hami',\n",
       " 'solnechnyy',\n",
       " 'shache',\n",
       " 'riberalta',\n",
       " 'saint george',\n",
       " 'qasigiannguit',\n",
       " 'polyarnyy',\n",
       " 'panguna',\n",
       " 'la trinitaria',\n",
       " 'edinburg',\n",
       " 'comodoro rivadavia',\n",
       " 'bonavista',\n",
       " 'nakhon sawan',\n",
       " 'komsomolskiy',\n",
       " 'nenjiang',\n",
       " 'ayorou',\n",
       " 'nuristan',\n",
       " 'apatity',\n",
       " 'burnie',\n",
       " 'hobyo',\n",
       " 'haines junction',\n",
       " 'luderitz',\n",
       " 'padang',\n",
       " 'dikson',\n",
       " 'tabas',\n",
       " 'vinh',\n",
       " 'tual',\n",
       " 'bolungarvik',\n",
       " 'turtkul',\n",
       " 'torbay',\n",
       " 'clyde river',\n",
       " 'nowy sacz',\n",
       " 'westport',\n",
       " 'puerto maldonado',\n",
       " 'verkhnya syrovatka',\n",
       " 'cabedelo',\n",
       " 'celendin',\n",
       " 'touros',\n",
       " 'vanavara',\n",
       " 'jalu',\n",
       " 'gizo',\n",
       " 'sao bento do sul',\n",
       " 'mahanoro',\n",
       " 'san quintin',\n",
       " 'markova',\n",
       " 'zhanakorgan',\n",
       " 'halifax',\n",
       " 'pokrovsk',\n",
       " 'san policarpo',\n",
       " 'genhe',\n",
       " 'berbera',\n",
       " 'kemijarvi',\n",
       " 'kahna nau',\n",
       " 'attawapiskat',\n",
       " 'puerto rico',\n",
       " 'stokmarknes',\n",
       " 'makow mazowiecki',\n",
       " 'sovetskiy',\n",
       " 'lixourion',\n",
       " 'puerto baquerizo moreno',\n",
       " 'chaman',\n",
       " 'bokoro',\n",
       " 'provideniya',\n",
       " 'mount isa',\n",
       " 'kununurra',\n",
       " 'dubbo',\n",
       " 'nyurba',\n",
       " 'auki',\n",
       " 'vikindu',\n",
       " 'college',\n",
       " 'aguada de pasajeros',\n",
       " 'tabuk',\n",
       " 'japura',\n",
       " 'egvekinot',\n",
       " 'gornopravdinsk',\n",
       " 'grindavik',\n",
       " 'severnyy',\n",
       " 'la tuque',\n",
       " 'aranos',\n",
       " 'monte alegre',\n",
       " 'maltahohe',\n",
       " 'khuzhir',\n",
       " 'lata',\n",
       " 'la palma',\n",
       " 'nizhniy kuranakh',\n",
       " 'aksu',\n",
       " 'manaus',\n",
       " 'miraflores',\n",
       " 'dajal',\n",
       " 'paamiut',\n",
       " 'brae',\n",
       " 'palauig',\n",
       " 'aflu',\n",
       " 'rockland',\n",
       " 'kamiiso',\n",
       " 'atar',\n",
       " 'beringovskiy',\n",
       " 'vila franca do campo',\n",
       " 'taburi',\n",
       " 'ardistan',\n",
       " 'saryshagan',\n",
       " 'baruun-urt',\n",
       " 'angra dos reis',\n",
       " 'sola',\n",
       " 'brunsbuttel',\n",
       " 'mubende',\n",
       " 'tilichiki',\n",
       " 'mecca',\n",
       " 'manaia',\n",
       " 'madang',\n",
       " 'jardim',\n",
       " 'inverell',\n",
       " 'harlow',\n",
       " 'flin flon',\n",
       " 'byron bay',\n",
       " 'fukue',\n",
       " 'pundaguitan',\n",
       " 'ugoofaaru',\n",
       " 'santa barbara',\n",
       " 'hamilton',\n",
       " 'rawson',\n",
       " 'buala',\n",
       " 'annau',\n",
       " 'bechem',\n",
       " 'talnakh',\n",
       " 'lahaina',\n",
       " 'buariki',\n",
       " 'alvaraes',\n",
       " 'pangnirtung',\n",
       " 'ostersund',\n",
       " 'vestmanna',\n",
       " 'bargal',\n",
       " 'eskisehir',\n",
       " 'ust-kuyga',\n",
       " 'kodinsk',\n",
       " 'necochea',\n",
       " 'san vicente de canete',\n",
       " 'barreiras',\n",
       " 'grand-santi',\n",
       " 'kurgan',\n",
       " 'otjimbingwe',\n",
       " 'savannah bight',\n",
       " 'meadow lake',\n",
       " 'haapiti',\n",
       " 'ambilobe',\n",
       " 'pocone',\n",
       " 'zagare',\n",
       " 'south venice',\n",
       " 'samusu',\n",
       " 'ouranopolis',\n",
       " 'kantang',\n",
       " 'gat',\n",
       " 'vagur',\n",
       " 'havre-saint-pierre',\n",
       " 'guane',\n",
       " 'zhezkazgan',\n",
       " 'jinchengjiang',\n",
       " 'ossora',\n",
       " 'yuncheng',\n",
       " 'maceio',\n",
       " 'cap malheureux',\n",
       " 'providencia',\n",
       " 'gasa',\n",
       " 'limbang',\n",
       " 'khislavichi',\n",
       " 'tongzi',\n",
       " 'kieta',\n",
       " 'ancud',\n",
       " 'capreol',\n",
       " 'boende',\n",
       " 'ciudad bolivar',\n",
       " 'tunduru',\n",
       " 'dhamrai',\n",
       " 'la romana',\n",
       " 'bengkulu',\n",
       " 'ismailia',\n",
       " 'conceicao do araguaia',\n",
       " 'trelew',\n",
       " 'eyl',\n",
       " 'nishihara',\n",
       " 'alcala de henares',\n",
       " 'paraiso',\n",
       " 'voyvozh',\n",
       " 'kovdor',\n",
       " 'la orilla',\n",
       " 'taltal',\n",
       " 'praya',\n",
       " 'nurota',\n",
       " 'itapage',\n",
       " 'kitui',\n",
       " 'mocambique',\n",
       " 'chernyshevskiy',\n",
       " 'tuatapere',\n",
       " 'sorsk',\n",
       " 'fuerte olimpo',\n",
       " 'swellendam',\n",
       " 'te anau',\n",
       " 'armeria',\n",
       " 'flinders',\n",
       " 'toliary',\n",
       " 'antalaha',\n",
       " 'marcona',\n",
       " 'uk',\n",
       " 'mollendo',\n",
       " 'ixtapa']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(low=-90.000, high=90.000, size=1500)\n",
    "lngs = np.random.uniform(low=-180.000, high=180.000, size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "cities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hi\n",
      "city number1\n",
      "city number2\n",
      "city number3\n",
      "city number4\n",
      "city number5\n",
      "city number6\n",
      "city number7\n",
      "city number8\n",
      "city number9\n",
      "Failed\n",
      "city number9\n",
      "city number10\n",
      "city number11\n",
      "city number12\n",
      "city number13\n",
      "city number14\n",
      "city number15\n",
      "city number16\n",
      "city number17\n",
      "city number18\n",
      "city number19\n",
      "city number20\n",
      "city number21\n",
      "city number22\n",
      "city number23\n",
      "city number24\n",
      "city number25\n",
      "city number26\n",
      "Failed\n",
      "city number26\n",
      "city number27\n",
      "city number28\n",
      "Failed\n",
      "city number28\n",
      "city number29\n",
      "city number30\n",
      "city number31\n",
      "city number32\n",
      "city number33\n",
      "city number34\n",
      "city number35\n",
      "city number36\n",
      "city number37\n",
      "city number38\n",
      "city number39\n",
      "city number40\n",
      "city number41\n",
      "city number42\n",
      "Failed\n",
      "city number42\n",
      "city number43\n",
      "city number44\n",
      "city number45\n",
      "city number46\n",
      "city number47\n",
      "Failed\n",
      "city number47\n",
      "city number48\n",
      "city number49\n",
      "city number50\n",
      "city number51\n",
      "Failed\n",
      "city number51\n",
      "city number52\n",
      "city number53\n",
      "city number54\n",
      "city number55\n",
      "city number56\n",
      "city number57\n",
      "city number58\n",
      "city number59\n",
      "city number60\n",
      "city number61\n",
      "city number62\n",
      "city number63\n",
      "city number64\n",
      "city number65\n",
      "city number66\n",
      "Failed\n",
      "city number66\n",
      "city number67\n",
      "Failed\n",
      "city number67\n",
      "city number68\n",
      "city number69\n",
      "city number70\n",
      "city number71\n",
      "Failed\n",
      "city number71\n",
      "city number72\n",
      "city number73\n",
      "Failed\n",
      "city number73\n",
      "city number74\n",
      "city number75\n",
      "city number76\n",
      "city number77\n",
      "city number78\n",
      "city number79\n",
      "city number80\n",
      "city number81\n",
      "city number82\n",
      "city number83\n",
      "city number84\n",
      "city number85\n",
      "city number86\n",
      "city number87\n",
      "city number88\n",
      "city number89\n",
      "Failed\n",
      "city number89\n",
      "city number90\n",
      "city number91\n",
      "city number92\n",
      "city number93\n",
      "Failed\n",
      "city number93\n",
      "city number94\n",
      "city number95\n",
      "Failed\n",
      "city number95\n",
      "city number96\n",
      "city number97\n",
      "city number98\n",
      "city number99\n",
      "city number100\n",
      "city number101\n",
      "city number102\n",
      "city number103\n",
      "city number104\n",
      "city number105\n",
      "city number106\n",
      "city number107\n",
      "city number108\n",
      "city number109\n",
      "city number110\n",
      "city number111\n",
      "city number112\n",
      "city number113\n",
      "city number114\n",
      "city number115\n",
      "city number116\n",
      "city number117\n",
      "city number118\n",
      "city number119\n",
      "city number120\n",
      "city number121\n",
      "city number122\n",
      "city number123\n",
      "city number124\n",
      "city number125\n",
      "city number126\n",
      "city number127\n",
      "city number128\n",
      "city number129\n",
      "city number130\n",
      "city number131\n",
      "city number132\n",
      "city number133\n",
      "Failed\n",
      "city number133\n",
      "city number134\n",
      "city number135\n",
      "city number136\n",
      "city number137\n",
      "city number138\n",
      "city number139\n",
      "city number140\n",
      "city number141\n",
      "city number142\n",
      "city number143\n",
      "city number144\n",
      "city number145\n",
      "city number146\n",
      "city number147\n",
      "city number148\n",
      "city number149\n",
      "city number150\n",
      "city number151\n",
      "city number152\n",
      "city number153\n",
      "city number154\n",
      "city number155\n",
      "city number156\n",
      "city number157\n",
      "city number158\n",
      "city number159\n",
      "Failed\n",
      "city number159\n",
      "city number160\n",
      "city number161\n",
      "city number162\n",
      "city number163\n",
      "Failed\n",
      "city number163\n",
      "city number164\n",
      "city number165\n",
      "city number166\n",
      "city number167\n",
      "city number168\n",
      "city number169\n",
      "city number170\n",
      "city number171\n",
      "city number172\n",
      "city number173\n",
      "city number174\n",
      "city number175\n",
      "city number176\n",
      "city number177\n",
      "city number178\n",
      "city number179\n",
      "city number180\n",
      "city number181\n",
      "city number182\n",
      "Failed\n",
      "city number182\n",
      "city number183\n",
      "city number184\n",
      "city number185\n",
      "city number186\n",
      "city number187\n",
      "city number188\n",
      "city number189\n",
      "city number190\n",
      "Failed\n",
      "city number190\n",
      "city number191\n",
      "city number192\n",
      "city number193\n",
      "city number194\n",
      "city number195\n",
      "city number196\n",
      "city number197\n",
      "city number198\n",
      "city number199\n",
      "city number200\n",
      "city number201\n",
      "city number202\n",
      "city number203\n",
      "Failed\n",
      "city number203\n",
      "city number204\n",
      "city number205\n",
      "city number206\n",
      "city number207\n",
      "city number208\n",
      "city number209\n",
      "city number210\n",
      "city number211\n",
      "Failed\n",
      "city number211\n",
      "city number212\n",
      "city number213\n",
      "city number214\n",
      "city number215\n",
      "city number216\n",
      "city number217\n",
      "city number218\n",
      "city number219\n",
      "city number220\n",
      "city number221\n",
      "city number222\n",
      "city number223\n",
      "city number224\n",
      "city number225\n",
      "city number226\n",
      "city number227\n",
      "city number228\n",
      "city number229\n",
      "city number230\n",
      "city number231\n",
      "city number232\n",
      "city number233\n",
      "city number234\n",
      "city number235\n",
      "city number236\n",
      "Failed\n",
      "city number236\n",
      "city number237\n",
      "city number238\n",
      "city number239\n",
      "city number240\n",
      "Failed\n",
      "city number240\n",
      "city number241\n",
      "city number242\n",
      "city number243\n",
      "city number244\n",
      "city number245\n",
      "city number246\n",
      "Failed\n",
      "city number246\n",
      "city number247\n",
      "city number248\n",
      "city number249\n",
      "city number250\n",
      "city number251\n",
      "city number252\n",
      "city number253\n",
      "city number254\n",
      "Failed\n",
      "city number254\n",
      "city number255\n",
      "city number256\n",
      "Failed\n",
      "city number256\n",
      "city number257\n",
      "city number258\n",
      "city number259\n",
      "city number260\n",
      "Failed\n",
      "city number260\n",
      "city number261\n",
      "Failed\n",
      "city number261\n",
      "city number262\n",
      "city number263\n",
      "city number264\n",
      "city number265\n",
      "city number266\n",
      "city number267\n",
      "Failed\n",
      "city number267\n",
      "city number268\n",
      "city number269\n",
      "city number270\n",
      "city number271\n",
      "city number272\n",
      "city number273\n",
      "city number274\n",
      "city number275\n",
      "Failed\n",
      "city number275\n",
      "city number276\n",
      "city number277\n",
      "city number278\n",
      "city number279\n",
      "city number280\n",
      "city number281\n",
      "Failed\n",
      "city number281\n",
      "city number282\n",
      "Failed\n",
      "city number282\n",
      "city number283\n",
      "city number284\n",
      "city number285\n",
      "Failed\n",
      "city number285\n",
      "city number286\n",
      "city number287\n",
      "city number288\n",
      "city number289\n",
      "city number290\n",
      "city number291\n",
      "city number292\n",
      "Failed\n",
      "city number292\n",
      "city number293\n",
      "city number294\n",
      "city number295\n",
      "city number296\n",
      "city number297\n",
      "city number298\n",
      "city number299\n",
      "city number300\n",
      "city number301\n",
      "city number302\n",
      "city number303\n",
      "city number304\n",
      "city number305\n",
      "city number306\n",
      "city number307\n",
      "city number308\n",
      "city number309\n",
      "city number310\n",
      "city number311\n",
      "city number312\n",
      "city number313\n",
      "city number314\n",
      "city number315\n",
      "Failed\n",
      "city number315\n",
      "city number316\n",
      "city number317\n",
      "Failed\n",
      "city number317\n",
      "city number318\n",
      "Failed\n",
      "city number318\n",
      "city number319\n",
      "city number320\n",
      "city number321\n",
      "city number322\n",
      "city number323\n",
      "city number324\n",
      "city number325\n",
      "city number326\n",
      "Failed\n",
      "city number326\n",
      "Failed\n",
      "city number326\n",
      "city number327\n",
      "city number328\n",
      "Failed\n",
      "city number328\n",
      "city number329\n",
      "city number330\n",
      "city number331\n",
      "city number332\n",
      "Failed\n",
      "city number332\n",
      "city number333\n",
      "city number334\n",
      "city number335\n",
      "city number336\n",
      "Failed\n",
      "city number336\n",
      "city number337\n",
      "city number338\n",
      "city number339\n",
      "city number340\n",
      "city number341\n",
      "city number342\n",
      "city number343\n",
      "city number344\n",
      "city number345\n",
      "city number346\n",
      "city number347\n",
      "city number348\n",
      "city number349\n",
      "city number350\n",
      "city number351\n",
      "city number352\n",
      "city number353\n",
      "city number354\n",
      "city number355\n",
      "city number356\n",
      "city number357\n",
      "city number358\n",
      "city number359\n",
      "city number360\n",
      "city number361\n",
      "city number362\n",
      "city number363\n",
      "city number364\n",
      "city number365\n",
      "city number366\n",
      "city number367\n",
      "city number368\n",
      "city number369\n",
      "city number370\n",
      "city number371\n",
      "city number372\n",
      "city number373\n",
      "city number374\n",
      "Failed\n",
      "city number374\n",
      "Failed\n",
      "city number374\n",
      "city number375\n",
      "city number376\n",
      "city number377\n",
      "city number378\n",
      "city number379\n",
      "Failed\n",
      "city number379\n",
      "city number380\n",
      "city number381\n",
      "city number382\n",
      "city number383\n",
      "city number384\n",
      "city number385\n",
      "city number386\n",
      "city number387\n",
      "city number388\n",
      "city number389\n",
      "city number390\n",
      "city number391\n",
      "city number392\n",
      "city number393\n",
      "city number394\n",
      "Failed\n",
      "city number394\n",
      "Failed\n",
      "city number394\n",
      "Failed\n",
      "city number394\n",
      "Failed\n",
      "city number394\n",
      "city number395\n",
      "city number396\n",
      "city number397\n",
      "city number398\n",
      "city number399\n",
      "city number400\n",
      "city number401\n",
      "Failed\n",
      "city number401\n",
      "city number402\n",
      "city number403\n",
      "city number404\n",
      "city number405\n",
      "city number406\n",
      "city number407\n",
      "city number408\n",
      "city number409\n",
      "city number410\n",
      "city number411\n",
      "city number412\n",
      "city number413\n",
      "city number414\n",
      "city number415\n",
      "Failed\n",
      "city number415\n",
      "city number416\n",
      "city number417\n",
      "city number418\n",
      "city number419\n",
      "city number420\n",
      "city number421\n",
      "city number422\n",
      "city number423\n",
      "city number424\n",
      "city number425\n",
      "city number426\n",
      "city number427\n",
      "city number428\n",
      "city number429\n",
      "city number430\n",
      "Failed\n",
      "city number430\n",
      "city number431\n",
      "city number432\n",
      "city number433\n",
      "city number434\n",
      "city number435\n",
      "Failed\n",
      "city number435\n",
      "Failed\n",
      "city number435\n",
      "Failed\n",
      "city number435\n",
      "city number436\n",
      "city number437\n",
      "city number438\n",
      "city number439\n",
      "city number440\n",
      "city number441\n",
      "city number442\n",
      "city number443\n",
      "city number444\n",
      "city number445\n",
      "city number446\n",
      "city number447\n",
      "city number448\n",
      "city number449\n",
      "city number450\n",
      "city number451\n",
      "city number452\n",
      "city number453\n",
      "city number454\n",
      "city number455\n",
      "city number456\n",
      "city number457\n",
      "city number458\n",
      "city number459\n",
      "city number460\n",
      "Failed\n",
      "city number460\n",
      "city number461\n",
      "city number462\n",
      "city number463\n",
      "city number464\n",
      "Failed\n",
      "city number464\n",
      "city number465\n",
      "city number466\n",
      "city number467\n",
      "city number468\n",
      "city number469\n",
      "city number470\n",
      "city number471\n",
      "city number472\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "city number473\n",
      "city number474\n",
      "city number475\n",
      "city number476\n",
      "city number477\n",
      "city number478\n",
      "city number479\n",
      "city number480\n",
      "Failed\n",
      "city number480\n",
      "Failed\n",
      "city number480\n",
      "city number481\n",
      "city number482\n",
      "city number483\n",
      "city number484\n",
      "city number485\n",
      "city number486\n",
      "Failed\n",
      "city number486\n",
      "city number487\n",
      "city number488\n",
      "city number489\n",
      "city number490\n",
      "city number491\n",
      "city number492\n",
      "city number493\n",
      "city number494\n",
      "city number495\n",
      "city number496\n",
      "city number497\n",
      "city number498\n",
      "city number499\n",
      "city number500\n",
      "Failed\n",
      "city number500\n",
      "city number501\n",
      "city number502\n",
      "Failed\n",
      "city number502\n",
      "city number503\n",
      "city number504\n",
      "city number505\n",
      "city number506\n",
      "city number507\n",
      "city number508\n",
      "city number509\n",
      "city number510\n",
      "city number511\n",
      "city number512\n",
      "city number513\n",
      "city number514\n",
      "city number515\n",
      "city number516\n",
      "city number517\n",
      "Failed\n",
      "city number517\n",
      "city number518\n",
      "city number519\n",
      "city number520\n",
      "city number521\n",
      "city number522\n",
      "city number523\n",
      "city number524\n",
      "city number525\n",
      "Failed\n",
      "city number525\n",
      "city number526\n",
      "Failed\n",
      "city number526\n",
      "Failed\n",
      "city number526\n",
      "city number527\n"
     ]
    }
   ],
   "source": [
    "#seting the list for the data API\n",
    "x = 1\n",
    "claudiness =[]\n",
    "humidity = []\n",
    "lat = []\n",
    "temp = []\n",
    "wind = []\n",
    "\n",
    "#seting up the loop for the list \n",
    "print(\"hi\")\n",
    "for item in cities:\n",
    "    try: \n",
    "        base_url_weather = \"http://api.openweathermap.org/data/2.5/weather?q={0}&appid={1}\".format(item,api_keys)\n",
    "        response = requests.get(base_url_weather).json()\n",
    "        print(\"city number\" + str(x))\n",
    "        time.sleep(.75)\n",
    "\n",
    "        clouds = response['clouds'][\"all\"]\n",
    "        claudiness.append(clouds)\n",
    "        humidit = response['main']['humidity']\n",
    "        humidity.append(humidit)\n",
    "        latt = response['coord']['lat']\n",
    "        lat.append(latt)\n",
    "        tempp = response['main']['temp']\n",
    "        temp.append(tempp)\n",
    "        windd = response['wind']['speed']\n",
    "        wind.append(windd)\n",
    "\n",
    "        x = x+1\n",
    "    except Exception:\n",
    "        print(\"Failed\")\n",
    "        time.sleep(.75)\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     claudiness  humidit   latt   tempp  windd\n",
      "0            99       65  23.99  288.73   1.66\n",
      "1            21       68   3.07  302.62   4.61\n",
      "2            90       69 -46.19  284.26   6.26\n",
      "3            20       83  -3.71  299.21   2.10\n",
      "4             0       37  24.63  294.15   6.06\n",
      "5            67       82 -33.02  286.15   3.10\n",
      "6           100       52  37.57  292.75   3.10\n",
      "7            81       89  38.52  291.43   3.98\n",
      "8            75       81 -33.93  285.60   3.10\n",
      "9             1       34  39.65  283.48   9.80\n",
      "10            1      100  30.00  285.94   1.92\n",
      "11           75       56  46.87  276.87   4.10\n",
      "12           41       78 -21.21  299.15   3.10\n",
      "13           60       97   4.15  294.18   0.55\n",
      "14           40       86  55.79  271.57   7.00\n",
      "15           75       88  15.34  297.85   4.10\n",
      "16           75       70 -53.16  280.67   5.10\n",
      "17            0       32 -23.58  301.00   9.13\n",
      "18           20       93  41.53  285.36   2.60\n",
      "19           97       81  56.21  283.46   5.05\n",
      "20           82       85  -0.74  294.26   2.24\n",
      "21           76       90  -3.36  300.82   1.14\n",
      "22          100       85 -23.12  294.21   7.64\n",
      "23           90       93  45.36  284.48   2.60\n",
      "24           30       75 -34.42  285.93   2.24\n",
      "25           80       86  67.46  258.00   1.08\n",
      "26           77       78 -10.12  298.18   6.59\n",
      "27           80       77 -33.59  287.59   0.45\n",
      "28           12       63  26.99  297.24   1.80\n",
      "29           35       29  39.23  287.04   2.24\n",
      "..          ...      ...    ...     ...    ...\n",
      "497          89       97  -0.28  295.30   1.17\n",
      "498          11       79   8.12  297.66   3.27\n",
      "499          75       74  23.92  303.15   2.60\n",
      "500          20       94  18.43  298.15   2.10\n",
      "501          47       56  30.60  294.85   1.96\n",
      "502         100       95  -8.26  294.55   2.05\n",
      "503           0       65 -43.25  279.91   3.25\n",
      "504           0       72   7.98  300.03   4.32\n",
      "505          40       50  35.74  296.48   1.00\n",
      "506          75      100  40.48  280.33   3.10\n",
      "507          40       94  -0.03  301.15   2.60\n",
      "508         100       92  62.89  272.51   6.72\n",
      "509          96       95  67.56  271.05   3.14\n",
      "510         100       86  18.00  297.59   1.30\n",
      "511          30       95 -25.41  282.90   0.68\n",
      "512          20       49  -8.71  307.15   4.10\n",
      "513          67       18  40.56  291.34   5.21\n",
      "514          32       92  -3.69  294.84   1.41\n",
      "515          80       73  -1.37  296.39   2.77\n",
      "516          83       66  63.01  268.53   2.08\n",
      "517          88       70 -46.13  284.26   6.71\n",
      "518         100       53  54.00  272.16   3.29\n",
      "519           0       63 -21.04  289.81   2.08\n",
      "520           9       76 -34.02  284.15   2.60\n",
      "521          67       75 -45.41  278.62   5.45\n",
      "522         100       93  18.93  296.40   1.10\n",
      "523           0       50 -34.58  297.02   6.20\n",
      "524          12       79 -14.90  299.38   3.12\n",
      "525          38       90 -17.03  286.42   2.83\n",
      "526          90       88  20.71  299.99   0.83\n",
      "\n",
      "[527 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "weather = pd.DataFrame({\"claudiness\":claudiness,\n",
    "                        \"humidit\":humidity,\n",
    "                        \"latt\":lat,\n",
    "                        \"tempp\":temp,\n",
    "                        \"windd\":wind}\n",
    "                      )\n",
    "weather.to_csv(\"weather2.csv\")\n",
    "print(weather)                       \n",
    "                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather.plot.scatter(x=\"latt\",\n",
    "                     y= \"tempp\",\n",
    "                     c = \"blue\")\n",
    "plt.title(\"Temp vs Lat\")\n",
    "plt.savefig(\"Temp_vs_Lat.png\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather.plot.scatter(x=\"latt\",\n",
    "                     y= \"humidit\",\n",
    "                     c = \"blue\")\n",
    "plt.title(\"Humidit vs Lat\")\n",
    "plt.savefig(\"Humidit_vs_Lat.png\")\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather.plot.scatter(x=\"latt\",\n",
    "                     y= \"claudiness\",\n",
    "                     c = \"blue\")\n",
    "plt.title(\"claudiness vs Lat\")\n",
    "plt.savefig(\"claudiness_vs_Lat.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "weather.plot.scatter(x=\"latt\",\n",
    "                     y= \"windd\",\n",
    "                     c = \"blue\")\n",
    "plt.title(\"windd vs Lat\")\n",
    "plt.savefig(\"windd_vs_Lat.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
